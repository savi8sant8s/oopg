datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id                  Int @id @default(autoincrement())
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  nome                String
  email               String @unique
  senha               String
  sessoes             Sessao[]
}

model Sessao {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  valido              Boolean @default(true)
  token               String @unique
  admin               Admin @relation(fields: [adminId], references: [id])
  adminId             Int
}

enum Situacao {
  CONCLUIDO
  ANDAMENTO
  PARALIZADO
}

enum Categoria {
  SAUDE
  EDUCACAO
  ASSISTENCIASOCIAL
  ADMINISTRACAO
  URBANISMO
}

model Obra {
  id                                  Int @id @default(autoincrement()) 
  dataCriacao                         DateTime @default(now())
  dataAtualizacao                     DateTime?
  comentarios                         Comentario[]
  notas                               Nota[]
  numeroLicitacao                     String  
  descricao                           String
  convenioNumeroAno                   String?
  convenioConcedente                  String?
  convenioRepasse                     Float?
  convenioContrapartida               Float?
  contratadoCpfCcnpj                  String
  contratadoRazaoSocial               String
  contratoNumeroAno                   String
  contratoDataInicio                  String
  contratoPrazo                       String
  contratoValorContratado             Float
  contratoDataConclusao               String?
  aditivoPrazoAditado                 String?
  aditivoValorAditado                 String?
  execucaoReajuste                    Float?
  execucaoNaturezaDespesa             String
  execucaoValorMedidoAcumulado        Float
  execucaoValorPagoAcumuladoPeriodo   Float?
  execucaoValorPagoAcumuladoExercicio Float?
  valorPagoAcumulado                  Float 
  situacao                            Situacao
  categoria                           Categoria
}

model Comentario {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  titulo              String
  mensagem            String
  nomeUsuario         String
  email               String @unique
  imagemUrl           String
  obra                Obra @relation(fields: [obraId], references: [id])
  obraId              Int
}

model Nota {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  nota                Int
  email               String @unique
  obra                Obra @relation(fields: [obraId], references: [id])
  obraId              Int
}

model Noticia {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  titulo              String
  mensagem            String
  link                String
  imagemUrl           String
}