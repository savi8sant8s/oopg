datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Funcao {
  GERAL
  SUPORTE
}

enum Situacao {
  CONCLUIDO
  ANDAMENTO
  PARALIZADO
}

enum Categoria {
  SAUDE
  EDUCACAO
  ASSISTENCIASOCIAL
  ADMINISTRACAO
  URBANISMO
}

model Admin {
  id                  Int @id @default(autoincrement())
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  nome                String
  funcao              Funcao
  primeiroAcesso      Boolean @default(false)
  email               String @unique
  senha               String
  sessoes             Sessao[]
}

model Sessao {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  valido              Boolean @default(true)
  token               String @unique
  admin               Admin @relation(fields: [adminId], references: [id])
  adminId             Int
}

model Obra {
  id                                  Int @id @default(autoincrement()) 
  dataCriacao                         DateTime @default(now())
  dataAtualizacao                     DateTime?
  comentarios                         Comentario[]
  notas                               Nota[]
  numeroLicitacao                     String  
  descricao                           String
  convenioNumeroAno                   String?
  convenioConcedente                  String?
  convenioRepasse                     Float?
  convenioContrapartida               Float?
  contratadoCpfCnpj                   String
  contratadoRazaoSocial               String
  contratoNumeroAno                   String
  contratoDataInicio                  DateTime
  contratoPrazo                       DateTime
  contratoValorContratado             Float
  contratoDataConclusao               DateTime?
  aditivoPrazoAditado                 String?
  aditivoValorAditado                 String?
  execucaoReajuste                    Float?
  execucaoNaturezaDespesa             String
  execucaoValorMedidoAcumulado        Float
  execucaoValorPagoAcumuladoPeriodo   Float?
  execucaoValorPagoAcumuladoExercicio Float?
  valorPagoAcumulado                  Float 
  situacao                            Situacao
  categoria                           Categoria
}

model Comentario {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  titulo              String
  mensagem            String
  nomeUsuario         String
  email               String
  imagemUrl           String
  obra                Obra @relation(fields: [obraId], references: [id])
  obraId              Int
}

model Nota {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  nota                Int
  email               String
  obra                Obra @relation(fields: [obraId], references: [id])
  obraId              Int
}

model Noticia {
  id                  Int @id @default(autoincrement()) 
  dataCriacao         DateTime @default(now())
  dataAtualizacao     DateTime?
  titulo              String
  mensagem            String
  link                String
  imagemUrl           String
}